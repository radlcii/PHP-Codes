<!--
    Messing with PHP web pages as part of building a portfolio for employment to show I am capable of learning these things.
    This page was build on 6/14/2019 by Robert De La Cruz

    Credits go to:
    hugohabel's answer on https://stackoverflow.com/questions/11927260/printing-contents-of-array-on-separate-lines
    Dark-Reaper-'s answer on https://stackoverflow.com/questions/1678010/php-server-on-local-machine/21872484#21872484
    user1864610's answer on https://stackoverflow.com/questions/28160604/inserting-a-list-of-filenames-from-a-folder-into-mysql
    php query code retrieved from https://www.tutorialrepublic.com/php-tutorial/php-mysql-insert-query.php
    Extention extractor found at https://stackoverflow.com/questions/173868/how-do-i-get-extract-a-file-extension-in-php
    MySQL user authentication issues answer found at https://stackoverflow.com/questions/50026939/php-mysqli-connect-authentication-method-unknown-to-the-client-caching-sha2-pa
    get_browser_name function retrieved from Francesco R's response at https://php.net/manual/en/function.get-browser.php
    And many other sources that Google turned up for me.


    This Code is meant to read the contents of a file system directory and return all the items found as hyperlinks, basically creating an index.html page.  
    The ultimate goal is to be able to take information (pictures for the sake of ease) and create a gallery from information stored in the database.
    This code does technically work, however there is a major hangup when using the file system: Security protocols that vary wildly by browser!
    
    Notes on browsers I have installed on my own machine:
        Mozilla Firefox will display the link but it will not do anything if you click it.  The link does work though!  
        Right clicking the link and opening it in a new tab will take you to the destination requested, however 
        you have to click on the address bar, which has the correct address, and press enter to be taken to your file.
        For Mozilla, only the index page type of view is possible.

        In Internet Explorer, you must specify the localhost address of the php page as http://localhost...
        It will not allow https to be used, returning a "Could not make secure connection" error.
        But in IE, you can access the links via normal single clicks.

        Microsoft Edge similarly will allow you to use the links generated by this code unfettered.

        When dealing with calls for files on the local machine's file system from this type of page:
            Firefox will not allow it at all from a php 
            Edge won't display the image unless you click a link
            IE doesn't have any hangups displaying what it has access to on your local system
    
        While disappointing from the standpoint of this exercise, security is a good thing. (Not you, IE)

    To run the PHP test server, go to the command line and enter the following two commands:
    cd path/to/your/app
    php -S localhost:8000

-->
<html>
<head>
    <link rel="icon" href="data:,">                                             <!-- Resolving a favicon issue that appeared from nowhere -->
</head>
<body>
    <p> When run on the localhost, this page is designed to capture all the file 
        names in the local host folder, add them to a mysql database, query 
        each result, and return them as a web page of image thumbnails. </p>
    <?php

        function get_browser_name($user_agent) {
            if (strpos($user_agent, 'Opera') || strpos($user_agent, 'OPR/')) return 'Opera';
            elseif (strpos($user_agent, 'Edge')) return 'Edge';
            elseif (strpos($user_agent, 'Chrome')) return 'Chrome';
            elseif (strpos($user_agent, 'Safari')) return 'Safari';
            elseif (strpos($user_agent, 'Firefox')) return 'Firefox';
            elseif (strpos($user_agent, 'MSIE') || strpos($user_agent, 'Trident/7')) return 'Internet Explorer';
        
            return 'Other';
        }

        $browser = get_browser_name($_SERVER['HTTP_USER_AGENT']);               // Grab the browser name from the function.

        error_reporting(E_ALL);                                                 // This is ugly for a client to see but I'm the dev making a silly program.
        ini_set('display_errors', 1);                                           // These would probably be removed or at least commented out prior to shipping

        $dir = "file:///C:/zz-Images";                                          // Use an easy to find folder the C drive for ease.
        $fileArr = scandir($dir);

        $host="localhost";                                                      // Variables for the SQL connection ($conn)
        $user="YOUR_MYSQL_USERNAME";        // Your MySQL user name
        $password="YOUR_MYSQL_PASSWORD";    // Your MySQL password
        $dbname="php_db_test";              // Your MySQL Schema/DB name here
        $port=YOUR_MYSQL_PORT_NUMBER;       // Your MySQL port number
        $socket="mysql";

        $conn = new mysqli($host, $user, $password, $dbname, $port, $socket);   // This makes the actual connection

        echo '<br>Success... ' . mysqli_get_host_info( $conn ) . "<br>";        // Unnecessary, but it proves the connection was made
 
        $conn->query( "DROP TABLE IF EXISTS php_db_test.Images;" );             // Remove previous version of table if one exists
        $conn->query( "CREATE DATABASE IF NOT EXISTS php_db_test;" );           // Create the database if it doesn't exist 
        $conn->query( "CREATE TABLE IF NOT EXISTS php_db_test.Images (           /* Create the table if one does not exist (Which it should not) */
            id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
            filePath varchar(100) NOT NULL, 
            fileExt varchar(10) NOT NULL 
            );"
        );
        
        
        foreach ($fileArr as $file) {                                           // Loop over all the file names gathered above
            $path = $dir . "/" . $file;                                         // Combine the directory and file name to create the full path
            //echo "<br/>" . $path;                                             // Print the full path
            $ext  = pathinfo($file, PATHINFO_EXTENSION);                        // Capture the file extension

            if (strcmp($ext, "") && strcmp($ext, "mp4") ) {                     // This line excludes folders and mp4 files from being entered into the database
                $conn->query(
                    "INSERT INTO php_db_test.Images (filepath, fileExt)         /* Insert them into the database */
                    VALUES ('". $path ."', '". $ext ."'); "
                );
            }
        }

        $result = $conn->query("SELECT * FROM php_db_test.Images;" );           // Query the Images table and return everything in the table
        if ($result->num_rows > 0) {                                            // Check that there is a result in the first place
            if(strcmp($browser, 'Firefox') == 0) {                              // Firefox will not allow these links to go through without a lot of manual labor, so it gets special code
                while ($row = mysqli_fetch_array($result)) {
                    echo "<br><a href=\"" . $row['filePath'] . "\">" . $row['filePath'] . "</a>";   // Generate a link to the file
                }
            } else {                                                            // Any browsers not specifically mentioned above go here
                while ($row = mysqli_fetch_array($result)) {
                    echo "<a href=\"" . $row['filePath'] . "\" >
                            <img src=\"" . $row['filePath'] . "\" 
                                alt=\"Thumbnail not available\" 
                                style=\"max-width:300px\">
                         </a>";                                                 // Generates a link to the file with a thumbnail image
                }
            }
        } else {
            echo "<br>Zero rows returned.";                                     // Message to say nothing was found
        }

        $conn->close();                                                         // Operation complete, close the connection
    ?>

</body>

</html>